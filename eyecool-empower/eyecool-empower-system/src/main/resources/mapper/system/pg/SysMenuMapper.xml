<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysMenuMapper">

	<sql id="selectOrclMenuVo" databaseId="postgresql">
        select menu_id, menu_name, parent_id, order_num, url, target, menu_type, visible, coalesce(perms,'') as perms, icon, create_by, create_time 
		from sys_menu
    </sql>

	<select id="selectMenusByUserId" parameterType="Long" resultMap="SysMenuResult" databaseId="postgresql">
		select distinct m.menu_id, m.parent_id, m.menu_name, m.url, m.visible, coalesce(m.perms,'') as perms, m.target, m.menu_type, m.icon, m.order_num, m.create_time
		from sys_menu m
			 left join sys_role_menu rm on m.menu_id = rm.menu_id
			 left join sys_user_role ur on rm.role_id = ur.role_id
			 LEFT JOIN sys_role ro on ur.role_id = ro.role_id
		where ur.user_id = #{userId} and m.menu_type in ('M', 'C') and m.visible = '0'  AND ro.status = '0'
		order by m.parent_id, m.order_num
	</select>

	<select id="selectMenuNormalAll" resultMap="SysMenuResult" databaseId="postgresql">
		select distinct m.menu_id, m.parent_id, m.menu_name, m.url, m.visible, coalesce(m.perms,'') as perms, m.target, m.menu_type, m.icon, m.order_num, m.create_time
		from sys_menu m
		where m.menu_type in ('M', 'C') and m.visible = '0'
		order by m.parent_id, m.order_num
	</select>

	<select id="selectMenuAll" resultMap="SysMenuResult" databaseId="postgresql">
		<include refid="selectOrclMenuVo"/>
		order by parent_id, order_num
	</select>

	<select id="selectMenuAllByUserId" parameterType="Long" resultMap="SysMenuResult" databaseId="postgresql">
		select distinct m.menu_id, m.parent_id, m.menu_name, m.url, m.visible, coalesce(m.perms,'') as perms, m.target, m.menu_type, m.icon, m.order_num, m.create_time
		from sys_menu m
			 left join sys_role_menu rm on m.menu_id = rm.menu_id
			 left join sys_user_role ur on rm.role_id = ur.role_id
			 LEFT JOIN sys_role ro on ur.role_id = ro.role_id
		where ur.user_id = #{userId}
		order by m.parent_id, m.order_num
	</select>

	<select id="selectMenuTree" parameterType="Long" resultType="String" databaseId="postgresql">
		select concat(m.menu_id, coalesce(m.perms,'')) as perms
		from sys_menu m
			left join sys_role_menu rm on m.menu_id = rm.menu_id
		where rm.role_id = #{roleId}
		order by m.parent_id, m.order_num
	</select>

	<select id="selectMenuList" parameterType="SysMenu" resultMap="SysMenuResult" databaseId="postgresql">
		<include refid="selectOrclMenuVo"/>
		<where>
			<if test="menuName != null and menuName != ''">
				AND menu_name like concat(concat('%', #{menuName}), '%')
			</if>
			<if test="visible != null and visible != ''">
				AND visible = #{visible}
			</if>
		</where>
		order by parent_id, order_num
	</select>

	<select id="selectMenuListByUserId" parameterType="SysMenu" resultMap="SysMenuResult" databaseId="postgresql">
		select distinct m.menu_id, m.parent_id, m.menu_name, m.url, m.visible, coalesce(m.perms,'') as perms, m.target, m.menu_type, m.icon, m.order_num, m.create_time
		from sys_menu m
		left join sys_role_menu rm on m.menu_id = rm.menu_id
		left join sys_user_role ur on rm.role_id = ur.role_id
		LEFT JOIN sys_role ro on ur.role_id = ro.role_id
		where ur.user_id = #{params.userId}
		<if test="menuName != null and menuName != ''">
			AND m.menu_name like concat(concat('%', #{menuName}), '%')
		</if>
		<if test="visible != null and visible != ''">
			AND m.visible = #{visible}
		</if>
		order by m.parent_id, m.order_num
	</select>

	<select id="checkMenuNameUnique" parameterType="SysMenu" resultMap="SysMenuResult" databaseId="postgresql">
		<include refid="selectOrclMenuVo"/>
		where menu_name=#{menuName} and parent_id = #{parentId}
	</select>

	<update id="updateMenu" parameterType="SysMenu" databaseId="postgresql">
		update sys_menu
		<set>
			<if test="menuName != null and menuName != ''">menu_name = #{menuName},</if>
			<if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
			<if test="orderNum != null and orderNum != ''">order_num = ${orderNum},</if>
			<if test="url != null">url = #{url},</if>
			<if test="target != null and target != ''">target = #{target},</if>
			<if test="menuType != null and menuType != ''">menu_type = #{menuType},</if>
			<if test="visible != null">visible = #{visible},</if>
			<if test="perms !=null">perms = #{perms},</if>
			<if test="icon !=null and icon != ''">icon = #{icon},</if>
			<if test="remark != null">remark = #{remark},</if>
			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
			update_time = now()
		</set>
		where menu_id = #{menuId}
	</update>

	<insert id="insertMenu" parameterType="SysMenu" databaseId="postgresql">
	 	<selectKey keyProperty="menuId" order="BEFORE" resultType="Long">
			SELECT nextval('sys_menu_menu_id_seq'::regclass) as menuId  
		</selectKey>
		insert into sys_menu(
		<if test="menuId != null and menuId != 0">menu_id,</if>
		<if test="parentId != null and parentId != 0">parent_id,</if>
		<if test="menuName != null and menuName != ''">menu_name,</if>
		<if test="orderNum != null and orderNum != ''">order_num,</if>
		<if test="url != null and url != ''">url,</if>
		<if test="target != null and target != ''">target,</if>
		<if test="menuType != null and menuType != ''">menu_type,</if>
		<if test="visible != null">visible,</if>
		<if test="perms !=null and perms != ''">perms,</if>
		<if test="icon != null and icon != ''">icon,</if>
		<if test="remark != null and remark != ''">remark,</if>
		<if test="createBy != null and createBy != ''">create_by,</if>
		create_time
		)values(
		<if test="menuId != null and menuId != 0">#{menuId},</if>
		<if test="parentId != null and parentId != 0">#{parentId},</if>
		<if test="menuName != null and menuName != ''">#{menuName},</if>
		<if test="orderNum != null and orderNum != ''">${orderNum},</if>
		<if test="url != null and url != ''">#{url},</if>
		<if test="target != null and target != ''">#{target},</if>
		<if test="menuType != null and menuType != ''">#{menuType},</if>
		<if test="visible != null">#{visible},</if>
		<if test="perms !=null and perms != ''">#{perms},</if>
		<if test="icon != null and icon != ''">#{icon},</if>
		<if test="remark != null and remark != ''">#{remark},</if>
		<if test="createBy != null and createBy != ''">#{createBy},</if>
		now()
		)
	</insert>

</mapper> 