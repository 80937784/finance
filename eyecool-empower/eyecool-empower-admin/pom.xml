<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>empower</artifactId>
		<groupId>cn.eyecool</groupId>
		<version>1.0.0</version>
	</parent>
	
	<modelVersion>4.0.0</modelVersion>
	<packaging>jar</packaging>
	<artifactId>eyecool-empower-admin</artifactId>
	<description>
	    web服务入口
	</description>

	<dependencies>

		<!-- SpringBoot集成thymeleaf模板 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!-- SpringBoot集成单元测试 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- spring-boot-devtools -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional> <!-- 表示依赖不会传递 -->
		</dependency>

		<!-- swagger2 -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
		</dependency>

		<!--防止进入swagger页面报类型转换错误，排除2.9.2中的引用，手动增加1.5.21版本 -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>1.5.21</version>
		</dependency>

		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-models</artifactId>
			<version>1.5.21</version>
		</dependency>

		<!-- swagger2-UI -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
		</dependency>
		<!-- 核心模块 -->
		<dependency>
			<groupId>cn.eyecool</groupId>
			<artifactId>eyecool-empower-system</artifactId>
		</dependency>
		<!-- 核心模块 -->
		<dependency>
			<groupId>cn.eyecool</groupId>
			<artifactId>eyecool-empower-framework</artifactId>
		</dependency>

		<!-- 定时任务 -->
		<dependency>
			<groupId>cn.eyecool</groupId>
			<artifactId>eyecool-empower-quartz</artifactId>
		</dependency>

		<!-- 代码生成 -->
		<dependency>
			<groupId>cn.eyecool</groupId>
			<artifactId>eyecool-empower-generator</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<fork>true</fork> <!-- 如果没有该配置，devtools不会生效 -->
					<includeSystemScope>true</includeSystemScope>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<warName>${artifactId}</warName>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
					<testFailureIgnore>true</testFailureIgnore>
					<argLine>${surefireArgLine}</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- 定义插件中所有时间格式，默认值：yyyy-MM-dd’T’HH:mm:ssZ -->
        			<dateFormat>yyyy-MM-dd HH:mm:ss</dateFormat>
					<!--构建过程中,是否打印详细信息;默认值:false; -->
					<verbose>true</verbose>
					<!-- ".git"文件路径;默认值:${project.basedir}/.git; -->
					<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
					<!--若项目打包类型为pom,是否取消构建;默认值:true; -->
					<skipPoms>false</skipPoms>
					<!--是否生成"git.properties"文件;默认值:false; -->
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<!--指定"git.properties"文件的存放路径(默认git.properties相对于${project.basedir}的一个路径); -->
					<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
					<!--".git"文件夹未找到时,构建是否失败;若设置true,则构建失败;若设置false,则跳过执行该目标;默认值:true; -->
					<failOnNoGitDirectory>true</failOnNoGitDirectory>

					<!--git描述配置,可选;由JGit提供实现; -->
					<gitDescribe>
						<!--是否生成描述属性 -->
						<skip>false</skip>
						<!--提交操作未发现tag时,仅打印提交操作ID, -->
						<always>false</always>
						<!--提交操作ID显式字符长度,最大值为:40;默认值:7; 0代表特殊意义;后面有解释; -->
						<abbrev>7</abbrev>
						<!--构建触发时,代码有修改时(即"dirty state"),添加指定后缀;默认值:""; -->
						<dirty>-dirty</dirty>
						<!--always print using the "tag-commits_from_tag-g_commit_id-maybe_dirty" 
							format, even if "on" a tag. The distance will always be 0 if you're "on" 
							the tag. -->
						<forceLongFormat>false</forceLongFormat>
					</gitDescribe>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<index>true</index>
						<manifest>
							<addClasspath>false</addClasspath>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
						<manifestEntries>
							<build-time>${maven.build.timestamp}</build-time>
							<Git-Version-Id>${git.commit.id.abbrev}</Git-Version-Id>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
		</plugins>
		<finalName>${artifactId}-${version}</finalName>
	</build>

</project>